boxs
boxs <- ggplot() + geom_boxplot(aes(y=value, x=factor), data=data2) +
scale_y_continuous(breaks = c(0,5,10,35,100,350,1000,2000,3000), trans = "log") +
labs(x = "Census Description", y = "Amount of Population") +
scale_x_discrete(labels = c('Final','Maximum','Minimum')) +
theme_bw() +
theme(text = element_text(size=20))
boxs
boxs <- ggplot() + geom_boxplot(aes(y=value, x=factor), data=data2) +
scale_y_continuous(breaks = c(0,5,10,35,100,350,1000,2000,3000), trans = "log") +
labs(x = "Census Description", y = "Amount of Population") +
scale_x_discrete(labels = c('Final','Maximum','Minimum')) +
theme(text = element_text(size=20))
boxs
boxs <- ggplot() + geom_boxplot(aes(y=value, x=factor), data=data2) +
scale_y_continuous(breaks = c(0,5,10,35,100,350,1000,2000,3000), trans = "log") +
labs(x = "Census Description", y = "Amount of Population") +
scale_x_discrete(labels = c('Final','Maximum','Minimum')) +
theme(text = element_text(size=20), panel.background = element_rect(fill="grey"))
boxs
boxs <- ggplot() + geom_boxplot(aes(y=value, x=factor), data=data2, element_rect(fill="grey")) +
scale_y_continuous(breaks = c(0,5,10,35,100,350,1000,2000,3000), trans = "log") +
labs(x = "Census Description", y = "Amount of Population") +
scale_x_discrete(labels = c('Final','Maximum','Minimum')) +
theme(text = element_text(size=20), panel.background = element_rect(fill="grey"))
boxs <- ggplot() + geom_boxplot(aes(y=value, x=factor), data=data2, size=2) +
scale_y_continuous(breaks = c(0,5,10,35,100,350,1000,2000,3000), trans = "log") +
labs(x = "Census Description", y = "Amount of Population") +
scale_x_discrete(labels = c('Final','Maximum','Minimum')) +
theme(text = element_text(size=20), panel.background = element_rect(fill="grey"))
boxs
boxs <- ggplot() + geom_boxplot(aes(y=value, x=factor), data=data2, size=1.5) +
scale_y_continuous(breaks = c(0,5,10,35,100,350,1000,2000,3000), trans = "log") +
labs(x = "Census Description", y = "Amount of Population") +
scale_x_discrete(labels = c('Final','Maximum','Minimum')) +
theme(text = element_text(size=20), panel.background = element_rect(fill="grey"))
boxs
boxs <- ggplot() + geom_boxplot(aes(y=value, x=factor), data=data2, size=1.3) +
scale_y_continuous(breaks = c(0,5,10,35,100,350,1000,2000,3000), trans = "log") +
labs(x = "Census Description", y = "Amount of Population") +
scale_x_discrete(labels = c('Final','Maximum','Minimum')) +
theme(text = element_text(size=20), panel.background = element_rect(fill="grey"))
boxs
boxs <- ggplot() + geom_boxplot(aes(y=value, x=factor), data=data2, size=1.3) +
scale_y_continuous(breaks = c(0,5,10,35,100,350,1000,2000,3000), trans = "log") +
labs(x = "Census Description", y = "Number of Groups") +
scale_x_discrete(labels = c('Final Count','Maximum Groups','Post-Collapse')) +
theme(text = element_text(size=20), panel.background = element_rect(fill="grey"))
boxs
boxs <- ggplot() + geom_boxplot(aes(y=value, x=factor), data=data2, size=1.3) +
scale_y_continuous(breaks = c(0,5,10,35,100,350,1000,2000,3000), trans = "log") +
labs(x = "Census Description (log scale)", y = "Number of Groups") +
scale_x_discrete(labels = c('Final Count','Maximum Groups','Post-Collapse')) +
theme(text = element_text(size=20), panel.background = element_rect(fill="grey"))
boxs
histogram <- ggplot() +
geom_histogram(aes(mayasim), data=data, binwidth=.25, fill="orange", linetype=1, color="black") +
labs(x = "Divergence from Maya", y = "Count") +
theme(text = element_text(size=20))
histogram
boxs
summary(result2)
rpart.plot(result2, cex = .75)
summary(data)
data4 <- data[data$mayasim<.3,]
dim(data4)
data4 <- data[data$mayasim<.5,]
dim(data4)
colnames(data4)
data5 <- data4[,c("disturbanceRemovalChance", "costPromotiveRes", "costPromotiveIncRate",
"costDemotiveRes", "costDemotiveIncRate", "fecundityPromotiveRes",
"fecundityPromotiveIncRate", "fecundityDemotiveRes","fecundityDemotiveIncRate")]
dim(data5)
dists <- dist(data5)
dists
d <- dist(data5)
fit <- cmdscale(d,eig=TRUE, k=2)
fit
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric MDS", type="n")
text(x, y, labels = row.names(mydata), cex=.7)
text(x, y, labels = row.names(data5), cex=.7)
clusters <- pam(data5, k= 10)
library(cluster)
clusters <- pam(data5, k= 10)
clusplot(clusters)
data6 <- data[,c("disturbanceRemovalChance", "costPromotiveRes", "costPromotiveIncRate",
"costDemotiveRes", "costDemotiveIncRate", "fecundityPromotiveRes",
"fecundityPromotiveIncRate", "fecundityDemotiveRes","fecundityDemotiveIncRate")]
clusters2 <- pam(data6, 1000)
clusters2
clusters <- pam(data5, k= 5)
clusplot(clusters)
clusters <- pam(data5, k= 5, stand=true)
clusters <- pam(data5, k= 5, stand=TRUE)
clusplot(clusters)
clusters
summary(clusters)
str(clusters)
clusters$clustering
data6 <- data.frame(data5, factor(clusters$clustering))
summary(data6)
fit <- cmdscale(d,eig=TRUE, k=3)
x <- fit$points[,1]
y <- fit$points[,2]
z <- fit$points[,3]
library(plotly)
summary(data6)
colnames(data6)
colnames(data6)[10]
colnames(data6)[10] <- class
p <- plot_ly(data6, x=x, y=y, z=z, color=~class)
add_markers()
add_markers(p)
p <- plot_ly(data6, x=x, y=y, z=z, color=~class, colors=c("green", "red", "blue", "yellow", "brown"))
add_markers(p)
p <- plot_ly(data6, x=x, y=y, z=z, color=~class, colors=c("#BF382A", "red", "blue", "yellow", "brown"))
add_markers(p)
p <- plot_ly(data6, x=x, y=y, z=z, color=~class, colors=c("#BF382A", "#0C4B8E", "blue", "yellow", "brown"))
add_markers(p)
p <- plot_ly(data6, x=x, y=y, z=z, color=~class, colors=c("#BF382A", "#0C4B8E", "#16a085", "#fff933", #6e2c00"))
p <- plot_ly(data6, x=x, y=y, z=z, color=~class, colors=c("#BF382A", "#0C4B8E", "#16a085", "#fff933", "#6e2c00"))
add_markers(p)
p <- plot_ly(data6, x=x, y=y, z=z, color=~class, colors=c("#BF382A", "#0C4B8E", "#16a085", "#fff933", "#6e2c00"))
add_markers(p)
p <- plot_ly(data6, x=x, y=y, z=z, color=class, colors=c("#BF382A", "#0C4B8E", "#16a085", "#fff933", "#6e2c00"))
add_markers(p)
data6 <- data.frame(data5, factor(clusters$clustering), x, y, z)
p <- plot_ly(data6, x=~x, y=~y, z=~z, color=class, colors=c("#BF382A", "#0C4B8E", "#16a085", "#fff933", "#6e2c00"))
add_markers(p)
summary(data6)
str(data6)
colnames(data6)[10] <- "class"
p <- plot_ly(data6, x=~x, y=~y, z=~z, color=~class, colors=c("#BF382A", "#0C4B8E", "#16a085", "#fff933", "#6e2c00"))
add_markers(p)
histogram <- ggplot() +
geom_histogram(aes(disturbanceRemovalChance), data=data4, fill="orange", linetype=1, color="black") +
labs(x = "Divergence from Maya", y = "Count") +
theme(text = element_text(size=20))
histogram
histogram <- ggplot() +
geom_histogram(aes(disturbanceRemovalChance), data=data4, fill="orange", linetype=1, color="black") +
# labs(x = "Divergence from Maya", y = "Count") +
theme(text = element_text(size=20))
histogram
histogram <- ggplot() +
geom_histogram(aes(disturbanceRemovalChance), bins=15,data=data4, fill="orange", linetype=1, color="black") +
# labs(x = "Divergence from Maya", y = "Count") +
theme(text = element_text(size=20))
histogram
parameters <- c("disturbanceRemovalChance", "costPromotiveRes", "costPromotiveIncRate",
"costDemotiveRes", "costDemotiveIncRate", "fecundityPromotiveRes",
"fecundityPromotiveIncRate", "fecundityDemotiveRes","fecundityDemotiveIncRate")
makeplots <- function(row) {
histogram <- ggplot() +
geom_histogram(aes(data6[,parameters[row]]), bins=15,data=data4, fill="blue", linetype=1, color="black") +
theme(text = element_text(size=20))
ggsave(paste("/home/akara/Dropbox/thesis/figures/rresults/",f[row,2],".png",sep=""), histogram)
}
makeplots <- function(row) {
histogram <- ggplot() +
geom_histogram(aes(data6[,parameters[row]]), bins=15,data=data4, fill="blue", linetype=1, color="black") +
theme(text = element_text(size=20))
ggsave(paste("/home/akara/Dropbox/thesis/figures/rresults/",f[row,2],".png",sep=""), histogram)
}
lapply(makePlots, 1:9)
lapply(makePlots, c(1:9)
lapply(makePlots, c(1:9))
lapply(makePlots, c(1:9))
lapply(makeplots, c(1:9))
lapply(c(1:9),makeplots)
makeplots <- function(row) {
histogram <- ggplot() +
geom_histogram(aes(data6[,parameters[row]]), bins=15,data=data4, fill="blue", linetype=1, color="black") +
theme(text = element_text(size=20))
ggsave(paste("/home/akara/Dropbox/thesis/figures/rresults/",parameters[row],".png",sep=""), histogram)
}
lapply(c(1:9),makeplots)
makeplots <- function(row) {
histogram <- ggplot() +
geom_histogram(aes(data6[,parameters[row]]), bins=15,data=data4, fill="blue", linetype=1, color="black") +
theme(text = element_text(size=20))
ggsave(paste("/home/akara/Dropbox/thesis/figures/rresults/",parameters[row],"Hist.png",sep=""), histogram)
}
lapply(c(1:9),makeplots)
makePlots <- function(row) {
cols <- c("Maximum Population"="green","Minimum Population"="red", "Final Population"="blue")
p <- ggplot() +
geom_smooth(aes(chea[[row]][,f[row,2]], chea[[row]]$MaxL, color="Maximum Population"), se=FALSE) +
geom_point(aes(chea[[row]][,f[row,2]], chea[[row]]$MaxL, color="Maximum Population"), shape=3) +
geom_smooth(aes(chea[[row]][,f[row,2]], chea[[row]]$MinL, color="Minimum Population"), se=FALSE) +
geom_point(aes(chea[[row]][,f[row,2]], chea[[row]]$MinL, color="Minimum Population"), shape=4) +
geom_smooth(aes(chea[[row]][,f[row,2]], chea[[row]]$FinalL, color="Final Population"), se=FALSE) +
geom_point(aes(chea[[row]][,f[row,2]], chea[[row]]$FinalL, color="Final Population"), shape=1) +
labs(title = paste(f[row,2], "Effect on Population Dynamics"), x = f[row,2], y = "Value") +
scale_colour_manual(name = NULL, values=cols, guide = guide_legend())
ggsave(paste("/home/akara/Dropbox/thesis/figures/rresults/",f[row,2],".png",sep=""),p)
return(p)
}
chea2 <- lapply(c(1:10), makePlots)
f <- AddFactor (name = "disturbanceRemovalChance", min = 0, max = .3)
f <- AddFactor (factors = f, name = "costPromotiveRes", min = 0, max = 1)
f <- AddFactor (factors = f, name = "costPromotiveIncRate", min = 0, max = .02)
f <- AddFactor (factors = f, name = "costDemotiveRes", min = 0, max = 1)
f <- AddFactor (factors = f, name = "costDemotiveIncRate", min = 0, max = .05)
f <- AddFactor (factors = f, name = "fecundityPromotiveRes", min = 0, max = 1)
f <- AddFactor (factors = f, name = "fecundityPromotiveIncRate", min = 0, max = .01)
f <- AddFactor (factors = f, name = "fecundityDemotiveRes", min = 0, max = 1)
f <- AddFactor (factors = f, name = "fecundityDemotiveIncRate", min = 0, max = .0025)
f <- AddFactor (factors = f, name = "uplandAmount", min = 0, max = 250)
chea2 <- lapply(c(1:10), makePlots)
makeplots <- function(row) {
histogram <- ggplot() +
geom_histogram(aes(data6[,parameters[row]]), bins=15,data=data4, fill="blue", linetype=1, color="black") +
theme(text = element_text(size=20))
ggsave(paste("/home/akara/Dropbox/thesis/figures/rresults/",parameters[row],"Hist.png",sep=""), histogram)
}
lapply(c(1:9),makeplots)
makeplots <- function(row) {
histogram <- ggplot() +
geom_histogram(aes(data6[,parameters[row]]), bins=15,data=data4, fill="blue", linetype=1, color="black") +
theme(text = element_text(size=20)) +
labs(title = parameters[row])
ggsave(paste("/home/akara/Dropbox/thesis/figures/rresults/",parameters[row],"Hist.png",sep=""), histogram)
}
lapply(c(1:9),makeplots)
makeplots <- function(row) {
histogram <- ggplot() +
geom_histogram(aes(data6[,parameters[row]]), bins=15,data=data4, fill="blue", linetype=1, color="black") +
theme(text = element_text(size=20)) +
labs(xlab = parameters[row])
ggsave(paste("/home/akara/Dropbox/thesis/figures/rresults/",parameters[row],"Hist.png",sep=""), histogram)
}
lapply(c(1:9),makeplots)
makeplots <- function(row) {
histogram <- ggplot() +
geom_histogram(aes(data6[,parameters[row]]), bins=15,data=data4, fill="blue", linetype=1, color="black") +
theme(text = element_text(size=20)) +
labs(x = parameters[row])
ggsave(paste("/home/akara/Dropbox/thesis/figures/rresults/",parameters[row],"Hist.png",sep=""), histogram)
}
lapply(c(1:9),makeplots)
rpart.plot(result2, cex = .75)
rpart.plot(result2, cex = .75)
rpart.plot(result2, cex = .75)
rpart.plot(result2, cex = .75)
rpart.plot(result2, cex = .75)
rpart.plot(result2, cex = .75)
rpart.plot(result2, cex = .75)
rpart.plot(result2, cex = .75)
data <- readRDS("data.RDS")
ctrl <- rpart.control(cp = .0025)
result2 <- rpart(mayasim ~ disturbanceRemovalChance +
costPromotiveRes              +
costPromotiveIncRate          +
costDemotiveRes               +
costDemotiveIncRate           +
fecundityPromotiveRes         +
fecundityPromotiveIncRate     +
fecundityDemotiveRes          +
fecundityDemotiveIncRate, data = data, control = ctrl)
rpart.plot(result2, cex = .75)
rpart.plot(result2, cex = .75)
rpart.plot(result2, cex = .75)
rpart.plot(result2, cex = .75)
data8 <- data.frame(data, data$costPromotiveIncRate/data$costDemotiveIncRate, data$fecundityIncRate/data$fecundityIncRateDemotiveIncRate,)
data8 <- data.frame(data, data$costPromotiveIncRate/data$costDemotiveIncRate, data$fecundityIncRate/data$fecundityIncRateDemotiveIncRate)
data$costPromotiveIncRate/data$costDemotiveIncRate
data8 <- data.frame(data, data$costPromotiveIncRate/data$costDemotiveIncRate, data$fecundityPromotiveIncRate/data$fecundityDemotiveIncRate)
colnames(data8)
plot(data8[,1], data8[,39])
plot(data8[,39],data8[,1])
plot(log(data8[,39]),data8[,1])
plot(log(data8[,38]),data8[,1])
colnames(data8)[38] <- "costratio"
colnames(data8)[38] <- "fecundityratio"
awesome <- ggplot() + geom_point(aes(x = costratio, y = mayasim))
awesome <- ggplot() + geom_point(aes(x = costratio, y = mayasim), data=data8)
awesome
colnames(data8)
colnames(data8)[38] <- "costratio"
colnames(data8)[39] <- "fecundityratio"
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim), data=data8)
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim), data=data8) +
scale_x_continuous(trans=log)
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim), data=data8) +
scale_x_continuous(trans="log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim), data=data8, shape=3) +
scale_x_continuous(trans="log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=costDemotiveResilience), data=data8, shape=3) +
scale_x_continuous(trans="log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=costDemotiveRes), data=data8, shape=3) +
scale_x_continuous(trans="log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=fecundityratio), data=data8, shape=3) +
scale_x_continuous(trans="log")
awesome
summary(data8)
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log10")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=disturbanceRemovalChance), data=data8, shape=1) +
scale_x_continuous(trans="log")
awesome
fit <- ln(mayasim~costratio)
fit <- lm(mayasim~costratio)
fit <- lm(mayasim~costratio, data=data8)
fit
summary(fit)
fit <- lm(mayasim~costratio+fecundityratio, data=data8)
summary(fit)
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=disturbanceRemovalChance), data=data8, shape=1) +
scale_x_continuous(trans="log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityRatio), data=data8, shape=1) +
scale_x_continuous(trans="log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MinL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = FinalL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=MaxL), data=data8, shape=1) +
scale_x_continuous(trans="log") +
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=MaxL), data=data8, shape=1) +
scale_x_continuous(trans="log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=MaxL), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "sqrt")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=MaxL), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=MaxL), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=mayasim), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=mayasim), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=mayasim), data=data8) +
scale_x_continuous(trans="log") +
scale_colour_gradient(trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=mayasim), data=data8) +
scale_x_continuous(trans="log") +
scale_colour_gradient(trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=MinL), data=data8) +
scale_x_continuous(trans="log") +
scale_colour_gradient(trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=mayasim), data=data8) +
scale_x_continuous(trans="log") +
scale_colour_gradient(trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=costDemotiveRes), data=data8, shape=1) +
scale_x_continuous(trans="log") +
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=MaxL), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(trans = "log")
awesome <- ggplot() + geom_point(aes(x=costratio, y = mayasim, color=costDemotiveRes), data=data8, shape=1) +
scale_x_continuous(trans="log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "red", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "white", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "white", high = "black", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log")
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log") +
labs(x = "Cost Promotive Increase Rate Divided by Cost Demotive Increase Rate", y = "Maximum Groups") +
fit <- lm(mayasim~costratio, data=data8)
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log") +
labs(x = "Cost Promotive Increase Rate Divided by Cost Demotive Increase Rate", y = "Maximum Groups") +
theme(text = element_text(size=20), panel.background = element_rect(fill="grey"))
awesome
awesome <- ggplot() + geom_point(aes(x=costratio, y = MaxL, color=fecundityratio), data=data8, shape=1) +
scale_x_continuous(trans="log") +
scale_colour_gradient(low = "yellow", high = "blue", trans = "log") +
labs(x = "Cost Promotive Increase Rate / Cost Demotive Increase Rate", y = "Maximum Groups") +
theme(text = element_text(size=20), panel.background = element_rect(fill="grey"))
awesome
f <- AddFactor (name = "disturbanceRemovalChance", min = 0, max = .3)
f <- AddFactor (factors = f, name = "costPromotiveRes", min = 0, max = 1)
f <- AddFactor (factors = f, name = "costPromotiveIncRate", min = 0, max = .02)
f <- AddFactor (factors = f, name = "costDemotiveRes", min = 0, max = 1)
f <- AddFactor (factors = f, name = "costDemotiveIncRate", min = 0, max = .05)
f <- AddFactor (factors = f, name = "fecundityPromotiveRes", min = 0, max = 1)
f <- AddFactor (factors = f, name = "fecundityPromotiveIncRate", min = 0, max = .01)
f <- AddFactor (factors = f, name = "fecundityDemotiveRes", min = 0, max = 1)
f <- AddFactor (factors = f, name = "fecundityDemotiveIncRate", min = 0, max = .0025)
f <- AddFactor (factors = f, name = "uplandAmount", min = 0, max = 250)
oat <- function(row,n) {
params2 <- GetSimulationParameters(chaahk)
name <- f[row,2]
min <- as.numeric(f[row,3])
max <- as.numeric(f[row,4])
range <- data.frame(seq(min, max, (max - min)/(n-1)))
temp.oat <- data.frame(1:n, params)[,-1]
temp.oat[,name] <- range
temp.oat[,"randomSeed"] <- runif(n, min = 0, max = 9999999999)
result <- RunExperiment(chaahk, 1, temp.oat, objective)
mayasim <- result$output[,2]
output <- result$dataset
parameters <- result$paramset
data2 <- data.frame(mayasim, output, parameters)
return(data2)
}
makePlots <- function(row) {
cols <- c("Maximum Population"="green","Minimum Population"="red", "Final Population"="blue")
p <- ggplot() +
geom_smooth(aes(chea[[row]][,f[row,2]], chea[[row]]$MaxL, color="Maximum Population"), se=FALSE) +
geom_point(aes(chea[[row]][,f[row,2]], chea[[row]]$MaxL, color="Maximum Population"), shape=3) +
geom_smooth(aes(chea[[row]][,f[row,2]], chea[[row]]$MinL, color="Minimum Population"), se=FALSE) +
geom_point(aes(chea[[row]][,f[row,2]], chea[[row]]$MinL, color="Minimum Population"), shape=4) +
geom_smooth(aes(chea[[row]][,f[row,2]], chea[[row]]$FinalL, color="Final Population"), se=FALSE) +
geom_point(aes(chea[[row]][,f[row,2]], chea[[row]]$FinalL, color="Final Population"), shape=1) +
labs(title = paste(f[row,2], "Effect on Population Dynamics"), x = f[row,2], y = "Value") +
scale_colour_manual(name = NULL, values=cols, guide = guide_legend()) +
theme(text = element_text(size=20), panel.background = element_rect(fill="grey"))
ggsave(paste("/home/akara/Dropbox/thesis/figures/rresults/dotplots/",f[row,2],".png",sep=""),p)
return(p)
}
dir <- "/home/akara/Mayagrations/"
Easy.Setup(dir)
chaahk <- Model(modeldir=dir, dataset="final",1650, TRUE)
params <- GetSimulationParameters(chaahk)
objective <- function(p, r) {
criteria <- c()
score <- (r$MinL + r$FinalL + 100)/r$MaxL
criteria <- cbind(score)
return(score)
}
chaahk <- Model(modeldir=dir, dataset="final",1650, TRUE)
library(rrepast)
dir <- "/home/akara/Mayagrations/"
chaahk <- Model(modeldir=dir, dataset="final",1650, TRUE)
library(rrepast)
